// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ticket.proto

package oms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ticket struct {
	TicketId       string       `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	TicketNo       string       `protobuf:"bytes,2,opt,name=ticket_no,json=ticketNo,proto3" json:"ticket_no,omitempty"`
	StartTime      string       `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        string       `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	BusDate        string       `protobuf:"bytes,5,opt,name=bus_date,json=busDate,proto3" json:"bus_date,omitempty"`
	Pos            *Pos         `protobuf:"bytes,6,opt,name=pos,proto3" json:"pos,omitempty"`
	Operator       *Operator    `protobuf:"bytes,7,opt,name=operator,proto3" json:"operator,omitempty"`
	Amounts        *Amount      `protobuf:"bytes,8,opt,name=amounts,proto3" json:"amounts,omitempty"`
	TakemealNumber string       `protobuf:"bytes,9,opt,name=takemealNumber,proto3" json:"takemealNumber,omitempty"`
	Qty            int32        `protobuf:"varint,10,opt,name=qty,proto3" json:"qty,omitempty"`
	Status         string       `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	RefundInfo     *RefundInfo  `protobuf:"bytes,12,opt,name=refundInfo,proto3" json:"refundInfo,omitempty"`
	Channel        *Channel     `protobuf:"bytes,13,opt,name=channel,proto3" json:"channel,omitempty"`
	Products       []*Product   `protobuf:"bytes,14,rep,name=products,proto3" json:"products,omitempty"`
	Payments       []*Payment   `protobuf:"bytes,15,rep,name=payments,proto3" json:"payments,omitempty"`
	Promotions     []*Promotion `protobuf:"bytes,16,rep,name=promotions,proto3" json:"promotions,omitempty"`
	Members        []*Member    `protobuf:"bytes,17,rep,name=members,proto3" json:"members,omitempty"`
	Table          *Table       `protobuf:"bytes,18,opt,name=table,proto3" json:"table,omitempty"`
	People         int32        `protobuf:"varint,19,opt,name=people,proto3" json:"people,omitempty"`
	RoomNo         string       `protobuf:"bytes,20,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Remark         string       `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	HouseAc        bool         `protobuf:"varint,22,opt,name=house_ac,json=houseAc,proto3" json:"house_ac,omitempty"`
	OrderTimeType  string       `protobuf:"bytes,23,opt,name=order_time_type,json=orderTimeType,proto3" json:"order_time_type,omitempty"`
	ShiftNumber    string       `protobuf:"bytes,24,opt,name=shiftNumber,proto3" json:"shiftNumber,omitempty"`
	TaxList        []*Tax       `protobuf:"bytes,25,rep,name=taxList,proto3" json:"taxList,omitempty"`
	Store          *Store       `protobuf:"bytes,26,opt,name=store,proto3" json:"store,omitempty"`
	TakeawayInfo   *Takeaway    `protobuf:"bytes,34,opt,name=takeaway_info,json=takeawayInfo,proto3" json:"takeaway_info,omitempty"`
	TicketUno      string       `protobuf:"bytes,35,opt,name=ticketUno,proto3" json:"ticketUno,omitempty"`
	Coupons        []*Coupon    `protobuf:"bytes,36,rep,name=coupons,proto3" json:"coupons,omitempty"`
	//费用信息
	Fees []*Fee `protobuf:"bytes,37,rep,name=fees,proto3" json:"fees,omitempty"`
	//时区信息
	TimeZone             string    `protobuf:"bytes,38,opt,name=timeZone,proto3" json:"timeZone,omitempty"`
	Prior                *Prior    `protobuf:"bytes,39,opt,name=prior,proto3" json:"prior,omitempty"`
	Currency             *Currency `protobuf:"bytes,40,opt,name=currency,proto3" json:"currency,omitempty"`
	DiscountProportioned bool      `protobuf:"varint,41,opt,name=discount_proportioned,json=discountProportioned,proto3" json:"discount_proportioned,omitempty"`
	SpellOrder           bool      `protobuf:"varint,42,opt,name=spellOrder,proto3" json:"spellOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{0}
}

func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (m *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(m, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *Ticket) GetTicketNo() string {
	if m != nil {
		return m.TicketNo
	}
	return ""
}

func (m *Ticket) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Ticket) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Ticket) GetBusDate() string {
	if m != nil {
		return m.BusDate
	}
	return ""
}

func (m *Ticket) GetPos() *Pos {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *Ticket) GetOperator() *Operator {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *Ticket) GetAmounts() *Amount {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *Ticket) GetTakemealNumber() string {
	if m != nil {
		return m.TakemealNumber
	}
	return ""
}

func (m *Ticket) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *Ticket) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Ticket) GetRefundInfo() *RefundInfo {
	if m != nil {
		return m.RefundInfo
	}
	return nil
}

func (m *Ticket) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *Ticket) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Ticket) GetPayments() []*Payment {
	if m != nil {
		return m.Payments
	}
	return nil
}

func (m *Ticket) GetPromotions() []*Promotion {
	if m != nil {
		return m.Promotions
	}
	return nil
}

func (m *Ticket) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Ticket) GetTable() *Table {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *Ticket) GetPeople() int32 {
	if m != nil {
		return m.People
	}
	return 0
}

func (m *Ticket) GetRoomNo() string {
	if m != nil {
		return m.RoomNo
	}
	return ""
}

func (m *Ticket) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Ticket) GetHouseAc() bool {
	if m != nil {
		return m.HouseAc
	}
	return false
}

func (m *Ticket) GetOrderTimeType() string {
	if m != nil {
		return m.OrderTimeType
	}
	return ""
}

func (m *Ticket) GetShiftNumber() string {
	if m != nil {
		return m.ShiftNumber
	}
	return ""
}

func (m *Ticket) GetTaxList() []*Tax {
	if m != nil {
		return m.TaxList
	}
	return nil
}

func (m *Ticket) GetStore() *Store {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *Ticket) GetTakeawayInfo() *Takeaway {
	if m != nil {
		return m.TakeawayInfo
	}
	return nil
}

func (m *Ticket) GetTicketUno() string {
	if m != nil {
		return m.TicketUno
	}
	return ""
}

func (m *Ticket) GetCoupons() []*Coupon {
	if m != nil {
		return m.Coupons
	}
	return nil
}

func (m *Ticket) GetFees() []*Fee {
	if m != nil {
		return m.Fees
	}
	return nil
}

func (m *Ticket) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *Ticket) GetPrior() *Prior {
	if m != nil {
		return m.Prior
	}
	return nil
}

func (m *Ticket) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *Ticket) GetDiscountProportioned() bool {
	if m != nil {
		return m.DiscountProportioned
	}
	return false
}

func (m *Ticket) GetSpellOrder() bool {
	if m != nil {
		return m.SpellOrder
	}
	return false
}

type Prior struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	IsPrior              bool     `protobuf:"varint,3,opt,name=isPrior,proto3" json:"isPrior,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prior) Reset()         { *m = Prior{} }
func (m *Prior) String() string { return proto.CompactTextString(m) }
func (*Prior) ProtoMessage()    {}
func (*Prior) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{1}
}

func (m *Prior) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prior.Unmarshal(m, b)
}
func (m *Prior) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prior.Marshal(b, m, deterministic)
}
func (m *Prior) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prior.Merge(m, src)
}
func (m *Prior) XXX_Size() int {
	return xxx_messageInfo_Prior.Size(m)
}
func (m *Prior) XXX_DiscardUnknown() {
	xxx_messageInfo_Prior.DiscardUnknown(m)
}

var xxx_messageInfo_Prior proto.InternalMessageInfo

func (m *Prior) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Prior) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Prior) GetIsPrior() bool {
	if m != nil {
		return m.IsPrior
	}
	return false
}

type Store struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	SecondCode           string   `protobuf:"bytes,3,opt,name=secondCode,proto3" json:"secondCode,omitempty"`
	CompanyId            string   `protobuf:"bytes,4,opt,name=companyId,proto3" json:"companyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Store) Reset()         { *m = Store{} }
func (m *Store) String() string { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()    {}
func (*Store) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{2}
}

func (m *Store) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Store.Unmarshal(m, b)
}
func (m *Store) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Store.Marshal(b, m, deterministic)
}
func (m *Store) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Store.Merge(m, src)
}
func (m *Store) XXX_Size() int {
	return xxx_messageInfo_Store.Size(m)
}
func (m *Store) XXX_DiscardUnknown() {
	xxx_messageInfo_Store.DiscardUnknown(m)
}

var xxx_messageInfo_Store proto.InternalMessageInfo

func (m *Store) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Store) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Store) GetSecondCode() string {
	if m != nil {
		return m.SecondCode
	}
	return ""
}

func (m *Store) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

type Pos struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	PosName              string   `protobuf:"bytes,3,opt,name=pos_name,json=posName,proto3" json:"pos_name,omitempty"`
	DeviceId             string   `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceCode           string   `protobuf:"bytes,5,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pos) Reset()         { *m = Pos{} }
func (m *Pos) String() string { return proto.CompactTextString(m) }
func (*Pos) ProtoMessage()    {}
func (*Pos) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{3}
}

func (m *Pos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pos.Unmarshal(m, b)
}
func (m *Pos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pos.Marshal(b, m, deterministic)
}
func (m *Pos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pos.Merge(m, src)
}
func (m *Pos) XXX_Size() int {
	return xxx_messageInfo_Pos.Size(m)
}
func (m *Pos) XXX_DiscardUnknown() {
	xxx_messageInfo_Pos.DiscardUnknown(m)
}

var xxx_messageInfo_Pos proto.InternalMessageInfo

func (m *Pos) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pos) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Pos) GetPosName() string {
	if m != nil {
		return m.PosName
	}
	return ""
}

func (m *Pos) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Pos) GetDeviceCode() string {
	if m != nil {
		return m.DeviceCode
	}
	return ""
}

type Amount struct {
	TaxAmount            float64  `protobuf:"fixed64,1,opt,name=taxAmount,proto3" json:"taxAmount,omitempty"`
	GrossAmount          float64  `protobuf:"fixed64,2,opt,name=gross_amount,json=grossAmount,proto3" json:"gross_amount,omitempty"`
	NetAmount            float64  `protobuf:"fixed64,3,opt,name=net_amount,json=netAmount,proto3" json:"net_amount,omitempty"`
	PayAmount            float64  `protobuf:"fixed64,4,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`
	DiscountAmount       float64  `protobuf:"fixed64,5,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	RemovezeroAmount     float64  `protobuf:"fixed64,6,opt,name=removezero_amount,json=removezeroAmount,proto3" json:"removezero_amount,omitempty"`
	Rounding             float64  `protobuf:"fixed64,7,opt,name=rounding,proto3" json:"rounding,omitempty"`
	OverflowAmount       float64  `protobuf:"fixed64,8,opt,name=overflow_amount,json=overflowAmount,proto3" json:"overflow_amount,omitempty"`
	ChangeAmount         float64  `protobuf:"fixed64,9,opt,name=changeAmount,proto3" json:"changeAmount,omitempty"`
	ServiceFee           float64  `protobuf:"fixed64,10,opt,name=serviceFee,proto3" json:"serviceFee,omitempty"`
	Tip                  float64  `protobuf:"fixed64,11,opt,name=tip,proto3" json:"tip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Amount) Reset()         { *m = Amount{} }
func (m *Amount) String() string { return proto.CompactTextString(m) }
func (*Amount) ProtoMessage()    {}
func (*Amount) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{4}
}

func (m *Amount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Amount.Unmarshal(m, b)
}
func (m *Amount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Amount.Marshal(b, m, deterministic)
}
func (m *Amount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Amount.Merge(m, src)
}
func (m *Amount) XXX_Size() int {
	return xxx_messageInfo_Amount.Size(m)
}
func (m *Amount) XXX_DiscardUnknown() {
	xxx_messageInfo_Amount.DiscardUnknown(m)
}

var xxx_messageInfo_Amount proto.InternalMessageInfo

func (m *Amount) GetTaxAmount() float64 {
	if m != nil {
		return m.TaxAmount
	}
	return 0
}

func (m *Amount) GetGrossAmount() float64 {
	if m != nil {
		return m.GrossAmount
	}
	return 0
}

func (m *Amount) GetNetAmount() float64 {
	if m != nil {
		return m.NetAmount
	}
	return 0
}

func (m *Amount) GetPayAmount() float64 {
	if m != nil {
		return m.PayAmount
	}
	return 0
}

func (m *Amount) GetDiscountAmount() float64 {
	if m != nil {
		return m.DiscountAmount
	}
	return 0
}

func (m *Amount) GetRemovezeroAmount() float64 {
	if m != nil {
		return m.RemovezeroAmount
	}
	return 0
}

func (m *Amount) GetRounding() float64 {
	if m != nil {
		return m.Rounding
	}
	return 0
}

func (m *Amount) GetOverflowAmount() float64 {
	if m != nil {
		return m.OverflowAmount
	}
	return 0
}

func (m *Amount) GetChangeAmount() float64 {
	if m != nil {
		return m.ChangeAmount
	}
	return 0
}

func (m *Amount) GetServiceFee() float64 {
	if m != nil {
		return m.ServiceFee
	}
	return 0
}

func (m *Amount) GetTip() float64 {
	if m != nil {
		return m.Tip
	}
	return 0
}

type Operator struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	LoginTime            string   `protobuf:"bytes,4,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LoginId              string   `protobuf:"bytes,5,opt,name=loginId,proto3" json:"loginId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operator) Reset()         { *m = Operator{} }
func (m *Operator) String() string { return proto.CompactTextString(m) }
func (*Operator) ProtoMessage()    {}
func (*Operator) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{5}
}

func (m *Operator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operator.Unmarshal(m, b)
}
func (m *Operator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operator.Marshal(b, m, deterministic)
}
func (m *Operator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operator.Merge(m, src)
}
func (m *Operator) XXX_Size() int {
	return xxx_messageInfo_Operator.Size(m)
}
func (m *Operator) XXX_DiscardUnknown() {
	xxx_messageInfo_Operator.DiscardUnknown(m)
}

var xxx_messageInfo_Operator proto.InternalMessageInfo

func (m *Operator) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Operator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Operator) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Operator) GetLoginTime() string {
	if m != nil {
		return m.LoginTime
	}
	return ""
}

func (m *Operator) GetLoginId() string {
	if m != nil {
		return m.LoginId
	}
	return ""
}

type Table struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId               string   `protobuf:"bytes,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	No                   string   `protobuf:"bytes,3,opt,name=no,proto3" json:"no,omitempty"`
	ZoneNo               string   `protobuf:"bytes,4,opt,name=zoneNo,proto3" json:"zoneNo,omitempty"`
	People               int32    `protobuf:"varint,5,opt,name=people,proto3" json:"people,omitempty"`
	Temporary            bool     `protobuf:"varint,6,opt,name=temporary,proto3" json:"temporary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Table) Reset()         { *m = Table{} }
func (m *Table) String() string { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()    {}
func (*Table) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{6}
}

func (m *Table) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Table.Unmarshal(m, b)
}
func (m *Table) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Table.Marshal(b, m, deterministic)
}
func (m *Table) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Table.Merge(m, src)
}
func (m *Table) XXX_Size() int {
	return xxx_messageInfo_Table.Size(m)
}
func (m *Table) XXX_DiscardUnknown() {
	xxx_messageInfo_Table.DiscardUnknown(m)
}

var xxx_messageInfo_Table proto.InternalMessageInfo

func (m *Table) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Table) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *Table) GetNo() string {
	if m != nil {
		return m.No
	}
	return ""
}

func (m *Table) GetZoneNo() string {
	if m != nil {
		return m.ZoneNo
	}
	return ""
}

func (m *Table) GetPeople() int32 {
	if m != nil {
		return m.People
	}
	return 0
}

func (m *Table) GetTemporary() bool {
	if m != nil {
		return m.Temporary
	}
	return false
}

type Channel struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	DeviceType           string   `protobuf:"bytes,2,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	OrderType            string   `protobuf:"bytes,3,opt,name=orderType,proto3" json:"orderType,omitempty"`
	DeliveryType         string   `protobuf:"bytes,4,opt,name=deliveryType,proto3" json:"deliveryType,omitempty"`
	TpName               string   `protobuf:"bytes,5,opt,name=tpName,proto3" json:"tpName,omitempty"`
	Code                 string   `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{7}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Channel) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *Channel) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *Channel) GetDeliveryType() string {
	if m != nil {
		return m.DeliveryType
	}
	return ""
}

func (m *Channel) GetTpName() string {
	if m != nil {
		return m.TpName
	}
	return ""
}

func (m *Channel) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type RefundInfo struct {
	RefundId             string   `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`
	RefTicketId          string   `protobuf:"bytes,2,opt,name=ref_ticket_id,json=refTicketId,proto3" json:"ref_ticket_id,omitempty"`
	RefTicketNo          string   `protobuf:"bytes,3,opt,name=ref_ticket_no,json=refTicketNo,proto3" json:"ref_ticket_no,omitempty"`
	RefundReason         string   `protobuf:"bytes,4,opt,name=refund_reason,json=refundReason,proto3" json:"refund_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundInfo) Reset()         { *m = RefundInfo{} }
func (m *RefundInfo) String() string { return proto.CompactTextString(m) }
func (*RefundInfo) ProtoMessage()    {}
func (*RefundInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{8}
}

func (m *RefundInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundInfo.Unmarshal(m, b)
}
func (m *RefundInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundInfo.Marshal(b, m, deterministic)
}
func (m *RefundInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundInfo.Merge(m, src)
}
func (m *RefundInfo) XXX_Size() int {
	return xxx_messageInfo_RefundInfo.Size(m)
}
func (m *RefundInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RefundInfo proto.InternalMessageInfo

func (m *RefundInfo) GetRefundId() string {
	if m != nil {
		return m.RefundId
	}
	return ""
}

func (m *RefundInfo) GetRefTicketId() string {
	if m != nil {
		return m.RefTicketId
	}
	return ""
}

func (m *RefundInfo) GetRefTicketNo() string {
	if m != nil {
		return m.RefTicketNo
	}
	return ""
}

func (m *RefundInfo) GetRefundReason() string {
	if m != nil {
		return m.RefundReason
	}
	return ""
}

type Product struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string       `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	SeqId                int64        `protobuf:"varint,4,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	Price                float64      `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Amount               float64      `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Qty                  int32        `protobuf:"varint,7,opt,name=qty,proto3" json:"qty,omitempty"`
	DiscountAmount       float64      `protobuf:"fixed64,8,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	Type                 string       `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Accessories          []*Product   `protobuf:"bytes,10,rep,name=accessories,proto3" json:"accessories,omitempty"`
	ComboItems           []*Product   `protobuf:"bytes,11,rep,name=combo_items,json=comboItems,proto3" json:"combo_items,omitempty"`
	OperationRecords     string       `protobuf:"bytes,12,opt,name=operation_records,json=operationRecords,proto3" json:"operation_records,omitempty"`
	SkuRemark            []*SkuRemark `protobuf:"bytes,13,rep,name=skuRemark,proto3" json:"skuRemark,omitempty"`
	Remark               string       `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`
	TaxAmount            float64      `protobuf:"fixed64,15,opt,name=taxAmount,proto3" json:"taxAmount,omitempty"`
	NetAmount            float64      `protobuf:"fixed64,16,opt,name=net_amount,json=netAmount,proto3" json:"net_amount,omitempty"`
	SpellUsers           []*SpellUser `protobuf:"bytes,17,rep,name=spellUsers,proto3" json:"spellUsers,omitempty"`
	Blessing             *Blessing    `protobuf:"bytes,18,opt,name=blessing,proto3" json:"blessing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{9}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Product) GetSeqId() int64 {
	if m != nil {
		return m.SeqId
	}
	return 0
}

func (m *Product) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Product) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Product) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *Product) GetDiscountAmount() float64 {
	if m != nil {
		return m.DiscountAmount
	}
	return 0
}

func (m *Product) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Product) GetAccessories() []*Product {
	if m != nil {
		return m.Accessories
	}
	return nil
}

func (m *Product) GetComboItems() []*Product {
	if m != nil {
		return m.ComboItems
	}
	return nil
}

func (m *Product) GetOperationRecords() string {
	if m != nil {
		return m.OperationRecords
	}
	return ""
}

func (m *Product) GetSkuRemark() []*SkuRemark {
	if m != nil {
		return m.SkuRemark
	}
	return nil
}

func (m *Product) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Product) GetTaxAmount() float64 {
	if m != nil {
		return m.TaxAmount
	}
	return 0
}

func (m *Product) GetNetAmount() float64 {
	if m != nil {
		return m.NetAmount
	}
	return 0
}

func (m *Product) GetSpellUsers() []*SpellUser {
	if m != nil {
		return m.SpellUsers
	}
	return nil
}

func (m *Product) GetBlessing() *Blessing {
	if m != nil {
		return m.Blessing
	}
	return nil
}

type SpellUser struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Qty                  int32    `protobuf:"varint,2,opt,name=qty,proto3" json:"qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpellUser) Reset()         { *m = SpellUser{} }
func (m *SpellUser) String() string { return proto.CompactTextString(m) }
func (*SpellUser) ProtoMessage()    {}
func (*SpellUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{10}
}

func (m *SpellUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpellUser.Unmarshal(m, b)
}
func (m *SpellUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpellUser.Marshal(b, m, deterministic)
}
func (m *SpellUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpellUser.Merge(m, src)
}
func (m *SpellUser) XXX_Size() int {
	return xxx_messageInfo_SpellUser.Size(m)
}
func (m *SpellUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SpellUser.DiscardUnknown(m)
}

var xxx_messageInfo_SpellUser proto.InternalMessageInfo

func (m *SpellUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SpellUser) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

type Currency struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{11}
}

func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (m *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(m, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Currency) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type SkuRemark struct {
	Name                 *SkuRemarkSkuName  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Values               *SkuRemarkSkuValue `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SkuRemark) Reset()         { *m = SkuRemark{} }
func (m *SkuRemark) String() string { return proto.CompactTextString(m) }
func (*SkuRemark) ProtoMessage()    {}
func (*SkuRemark) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{12}
}

func (m *SkuRemark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkuRemark.Unmarshal(m, b)
}
func (m *SkuRemark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkuRemark.Marshal(b, m, deterministic)
}
func (m *SkuRemark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkuRemark.Merge(m, src)
}
func (m *SkuRemark) XXX_Size() int {
	return xxx_messageInfo_SkuRemark.Size(m)
}
func (m *SkuRemark) XXX_DiscardUnknown() {
	xxx_messageInfo_SkuRemark.DiscardUnknown(m)
}

var xxx_messageInfo_SkuRemark proto.InternalMessageInfo

func (m *SkuRemark) GetName() *SkuRemarkSkuName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SkuRemark) GetValues() *SkuRemarkSkuValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type SkuRemarkSkuName struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkuRemarkSkuName) Reset()         { *m = SkuRemarkSkuName{} }
func (m *SkuRemarkSkuName) String() string { return proto.CompactTextString(m) }
func (*SkuRemarkSkuName) ProtoMessage()    {}
func (*SkuRemarkSkuName) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{12, 0}
}

func (m *SkuRemarkSkuName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkuRemarkSkuName.Unmarshal(m, b)
}
func (m *SkuRemarkSkuName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkuRemarkSkuName.Marshal(b, m, deterministic)
}
func (m *SkuRemarkSkuName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkuRemarkSkuName.Merge(m, src)
}
func (m *SkuRemarkSkuName) XXX_Size() int {
	return xxx_messageInfo_SkuRemarkSkuName.Size(m)
}
func (m *SkuRemarkSkuName) XXX_DiscardUnknown() {
	xxx_messageInfo_SkuRemarkSkuName.DiscardUnknown(m)
}

var xxx_messageInfo_SkuRemarkSkuName proto.InternalMessageInfo

func (m *SkuRemarkSkuName) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SkuRemarkSkuName) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SkuRemarkSkuName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SkuRemarkSkuValue struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkuRemarkSkuValue) Reset()         { *m = SkuRemarkSkuValue{} }
func (m *SkuRemarkSkuValue) String() string { return proto.CompactTextString(m) }
func (*SkuRemarkSkuValue) ProtoMessage()    {}
func (*SkuRemarkSkuValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{12, 1}
}

func (m *SkuRemarkSkuValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkuRemarkSkuValue.Unmarshal(m, b)
}
func (m *SkuRemarkSkuValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkuRemarkSkuValue.Marshal(b, m, deterministic)
}
func (m *SkuRemarkSkuValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkuRemarkSkuValue.Merge(m, src)
}
func (m *SkuRemarkSkuValue) XXX_Size() int {
	return xxx_messageInfo_SkuRemarkSkuValue.Size(m)
}
func (m *SkuRemarkSkuValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SkuRemarkSkuValue.DiscardUnknown(m)
}

var xxx_messageInfo_SkuRemarkSkuValue proto.InternalMessageInfo

func (m *SkuRemarkSkuValue) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SkuRemarkSkuValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Tax struct {
	Amount               float64  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	SubTotal             float64  `protobuf:"fixed64,2,opt,name=subTotal,proto3" json:"subTotal,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Rate                 float64  `protobuf:"fixed64,5,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tax) Reset()         { *m = Tax{} }
func (m *Tax) String() string { return proto.CompactTextString(m) }
func (*Tax) ProtoMessage()    {}
func (*Tax) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{13}
}

func (m *Tax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tax.Unmarshal(m, b)
}
func (m *Tax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tax.Marshal(b, m, deterministic)
}
func (m *Tax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tax.Merge(m, src)
}
func (m *Tax) XXX_Size() int {
	return xxx_messageInfo_Tax.Size(m)
}
func (m *Tax) XXX_DiscardUnknown() {
	xxx_messageInfo_Tax.DiscardUnknown(m)
}

var xxx_messageInfo_Tax proto.InternalMessageInfo

func (m *Tax) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Tax) GetSubTotal() float64 {
	if m != nil {
		return m.SubTotal
	}
	return 0
}

func (m *Tax) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Tax) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tax) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type Payment struct {
	Id            string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SeqId         string  `protobuf:"bytes,2,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	PayAmount     float64 `protobuf:"fixed64,3,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`
	RealPayAmount float64 `protobuf:"fixed64,4,opt,name=realPayAmount,proto3" json:"realPayAmount,omitempty"`
	Change        float64 `protobuf:"fixed64,5,opt,name=change,proto3" json:"change,omitempty"`
	Overflow      float64 `protobuf:"fixed64,6,opt,name=overflow,proto3" json:"overflow,omitempty"`
	Rounding      float64 `protobuf:"fixed64,7,opt,name=rounding,proto3" json:"rounding,omitempty"`
	PayTime       string  `protobuf:"bytes,8,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`
	TransCode     string  `protobuf:"bytes,9,opt,name=trans_code,json=transCode,proto3" json:"trans_code,omitempty"`
	Name          string  `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	//实收金额
	Receivable           float64  `protobuf:"fixed64,11,opt,name=receivable,proto3" json:"receivable,omitempty"`
	TpTransactionNo      string   `protobuf:"bytes,12,opt,name=tpTransactionNo,proto3" json:"tpTransactionNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{14}
}

func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (m *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(m, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payment) GetSeqId() string {
	if m != nil {
		return m.SeqId
	}
	return ""
}

func (m *Payment) GetPayAmount() float64 {
	if m != nil {
		return m.PayAmount
	}
	return 0
}

func (m *Payment) GetRealPayAmount() float64 {
	if m != nil {
		return m.RealPayAmount
	}
	return 0
}

func (m *Payment) GetChange() float64 {
	if m != nil {
		return m.Change
	}
	return 0
}

func (m *Payment) GetOverflow() float64 {
	if m != nil {
		return m.Overflow
	}
	return 0
}

func (m *Payment) GetRounding() float64 {
	if m != nil {
		return m.Rounding
	}
	return 0
}

func (m *Payment) GetPayTime() string {
	if m != nil {
		return m.PayTime
	}
	return ""
}

func (m *Payment) GetTransCode() string {
	if m != nil {
		return m.TransCode
	}
	return ""
}

func (m *Payment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Payment) GetReceivable() float64 {
	if m != nil {
		return m.Receivable
	}
	return 0
}

func (m *Payment) GetTpTransactionNo() string {
	if m != nil {
		return m.TpTransactionNo
	}
	return ""
}

type Promotion struct {
	PromotionInfo        *PromotionInfo      `protobuf:"bytes,1,opt,name=promotionInfo,proto3" json:"promotionInfo,omitempty"`
	Source               *PromotionSource    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Products             []*PromotionProduct `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Promotion) Reset()         { *m = Promotion{} }
func (m *Promotion) String() string { return proto.CompactTextString(m) }
func (*Promotion) ProtoMessage()    {}
func (*Promotion) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{15}
}

func (m *Promotion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Promotion.Unmarshal(m, b)
}
func (m *Promotion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Promotion.Marshal(b, m, deterministic)
}
func (m *Promotion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Promotion.Merge(m, src)
}
func (m *Promotion) XXX_Size() int {
	return xxx_messageInfo_Promotion.Size(m)
}
func (m *Promotion) XXX_DiscardUnknown() {
	xxx_messageInfo_Promotion.DiscardUnknown(m)
}

var xxx_messageInfo_Promotion proto.InternalMessageInfo

func (m *Promotion) GetPromotionInfo() *PromotionInfo {
	if m != nil {
		return m.PromotionInfo
	}
	return nil
}

func (m *Promotion) GetSource() *PromotionSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Promotion) GetProducts() []*PromotionProduct {
	if m != nil {
		return m.Products
	}
	return nil
}

type PromotionInfo struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	DiscountType         string   `protobuf:"bytes,2,opt,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	PromotionId          string   `protobuf:"bytes,4,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	PromotionCode        string   `protobuf:"bytes,5,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	PromotionType        string   `protobuf:"bytes,6,opt,name=promotion_type,json=promotionType,proto3" json:"promotion_type,omitempty"`
	AllowOverlap         bool     `protobuf:"varint,7,opt,name=allow_overlap,json=allowOverlap,proto3" json:"allow_overlap,omitempty"`
	TriggerTimesCustom   bool     `protobuf:"varint,8,opt,name=trigger_times_custom,json=triggerTimesCustom,proto3" json:"trigger_times_custom,omitempty"`
	TicketDisplay        string   `protobuf:"bytes,9,opt,name=ticket_display,json=ticketDisplay,proto3" json:"ticket_display,omitempty"`
	MaxDiscount          float64  `protobuf:"fixed64,10,opt,name=max_discount,json=maxDiscount,proto3" json:"max_discount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PromotionInfo) Reset()         { *m = PromotionInfo{} }
func (m *PromotionInfo) String() string { return proto.CompactTextString(m) }
func (*PromotionInfo) ProtoMessage()    {}
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{16}
}

func (m *PromotionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionInfo.Unmarshal(m, b)
}
func (m *PromotionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionInfo.Marshal(b, m, deterministic)
}
func (m *PromotionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionInfo.Merge(m, src)
}
func (m *PromotionInfo) XXX_Size() int {
	return xxx_messageInfo_PromotionInfo.Size(m)
}
func (m *PromotionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionInfo proto.InternalMessageInfo

func (m *PromotionInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PromotionInfo) GetDiscountType() string {
	if m != nil {
		return m.DiscountType
	}
	return ""
}

func (m *PromotionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PromotionInfo) GetPromotionId() string {
	if m != nil {
		return m.PromotionId
	}
	return ""
}

func (m *PromotionInfo) GetPromotionCode() string {
	if m != nil {
		return m.PromotionCode
	}
	return ""
}

func (m *PromotionInfo) GetPromotionType() string {
	if m != nil {
		return m.PromotionType
	}
	return ""
}

func (m *PromotionInfo) GetAllowOverlap() bool {
	if m != nil {
		return m.AllowOverlap
	}
	return false
}

func (m *PromotionInfo) GetTriggerTimesCustom() bool {
	if m != nil {
		return m.TriggerTimesCustom
	}
	return false
}

func (m *PromotionInfo) GetTicketDisplay() string {
	if m != nil {
		return m.TicketDisplay
	}
	return ""
}

func (m *PromotionInfo) GetMaxDiscount() float64 {
	if m != nil {
		return m.MaxDiscount
	}
	return 0
}

type PromotionSource struct {
	Trigger              int32    `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Discount             float64  `protobuf:"fixed64,2,opt,name=discount,proto3" json:"discount,omitempty"`
	Fired                []string `protobuf:"bytes,3,rep,name=fired,proto3" json:"fired,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PromotionSource) Reset()         { *m = PromotionSource{} }
func (m *PromotionSource) String() string { return proto.CompactTextString(m) }
func (*PromotionSource) ProtoMessage()    {}
func (*PromotionSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{17}
}

func (m *PromotionSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionSource.Unmarshal(m, b)
}
func (m *PromotionSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionSource.Marshal(b, m, deterministic)
}
func (m *PromotionSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionSource.Merge(m, src)
}
func (m *PromotionSource) XXX_Size() int {
	return xxx_messageInfo_PromotionSource.Size(m)
}
func (m *PromotionSource) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionSource.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionSource proto.InternalMessageInfo

func (m *PromotionSource) GetTrigger() int32 {
	if m != nil {
		return m.Trigger
	}
	return 0
}

func (m *PromotionSource) GetDiscount() float64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *PromotionSource) GetFired() []string {
	if m != nil {
		return m.Fired
	}
	return nil
}

type PromotionProduct struct {
	Price                float64  `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Amt                  float64  `protobuf:"fixed64,2,opt,name=amt,proto3" json:"amt,omitempty"`
	AccAmt               float64  `protobuf:"fixed64,3,opt,name=accAmt,proto3" json:"accAmt,omitempty"`
	Qty                  int32    `protobuf:"varint,4,opt,name=qty,proto3" json:"qty,omitempty"`
	KeyId                string   `protobuf:"bytes,5,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Accies               []string `protobuf:"bytes,6,rep,name=accies,proto3" json:"accies,omitempty"`
	Type                 string   `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Discount             float64  `protobuf:"fixed64,8,opt,name=discount,proto3" json:"discount,omitempty"`
	FreeAmt              float64  `protobuf:"fixed64,9,opt,name=free_amt,json=freeAmt,proto3" json:"free_amt,omitempty"`
	Method               string   `protobuf:"bytes,10,opt,name=method,proto3" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PromotionProduct) Reset()         { *m = PromotionProduct{} }
func (m *PromotionProduct) String() string { return proto.CompactTextString(m) }
func (*PromotionProduct) ProtoMessage()    {}
func (*PromotionProduct) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{18}
}

func (m *PromotionProduct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionProduct.Unmarshal(m, b)
}
func (m *PromotionProduct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionProduct.Marshal(b, m, deterministic)
}
func (m *PromotionProduct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionProduct.Merge(m, src)
}
func (m *PromotionProduct) XXX_Size() int {
	return xxx_messageInfo_PromotionProduct.Size(m)
}
func (m *PromotionProduct) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionProduct.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionProduct proto.InternalMessageInfo

func (m *PromotionProduct) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PromotionProduct) GetAmt() float64 {
	if m != nil {
		return m.Amt
	}
	return 0
}

func (m *PromotionProduct) GetAccAmt() float64 {
	if m != nil {
		return m.AccAmt
	}
	return 0
}

func (m *PromotionProduct) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *PromotionProduct) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *PromotionProduct) GetAccies() []string {
	if m != nil {
		return m.Accies
	}
	return nil
}

func (m *PromotionProduct) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PromotionProduct) GetDiscount() float64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *PromotionProduct) GetFreeAmt() float64 {
	if m != nil {
		return m.FreeAmt
	}
	return 0
}

func (m *PromotionProduct) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type Member struct {
	MemberCode           string   `protobuf:"bytes,1,opt,name=member_code,json=memberCode,proto3" json:"member_code,omitempty"`
	Mobile               string   `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Greetings            string   `protobuf:"bytes,4,opt,name=greetings,proto3" json:"greetings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{19}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetMemberCode() string {
	if m != nil {
		return m.MemberCode
	}
	return ""
}

func (m *Member) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Member) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Member) GetGreetings() string {
	if m != nil {
		return m.Greetings
	}
	return ""
}

type Coupon struct {
	IsOnline             bool     `protobuf:"varint,1,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Type                 int64    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	ParValue             float64  `protobuf:"fixed64,6,opt,name=par_value,json=parValue,proto3" json:"par_value,omitempty"`
	SequenceId           string   `protobuf:"bytes,7,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coupon) Reset()         { *m = Coupon{} }
func (m *Coupon) String() string { return proto.CompactTextString(m) }
func (*Coupon) ProtoMessage()    {}
func (*Coupon) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{20}
}

func (m *Coupon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coupon.Unmarshal(m, b)
}
func (m *Coupon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coupon.Marshal(b, m, deterministic)
}
func (m *Coupon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coupon.Merge(m, src)
}
func (m *Coupon) XXX_Size() int {
	return xxx_messageInfo_Coupon.Size(m)
}
func (m *Coupon) XXX_DiscardUnknown() {
	xxx_messageInfo_Coupon.DiscardUnknown(m)
}

var xxx_messageInfo_Coupon proto.InternalMessageInfo

func (m *Coupon) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *Coupon) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Coupon) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Coupon) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Coupon) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Coupon) GetParValue() float64 {
	if m != nil {
		return m.ParValue
	}
	return 0
}

func (m *Coupon) GetSequenceId() string {
	if m != nil {
		return m.SequenceId
	}
	return ""
}

type Fee struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Qty                  int32    `protobuf:"varint,3,opt,name=qty,proto3" json:"qty,omitempty"`
	Amount               float64  `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fee) Reset()         { *m = Fee{} }
func (m *Fee) String() string { return proto.CompactTextString(m) }
func (*Fee) ProtoMessage()    {}
func (*Fee) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{21}
}

func (m *Fee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fee.Unmarshal(m, b)
}
func (m *Fee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fee.Marshal(b, m, deterministic)
}
func (m *Fee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fee.Merge(m, src)
}
func (m *Fee) XXX_Size() int {
	return xxx_messageInfo_Fee.Size(m)
}
func (m *Fee) XXX_DiscardUnknown() {
	xxx_messageInfo_Fee.DiscardUnknown(m)
}

var xxx_messageInfo_Fee proto.InternalMessageInfo

func (m *Fee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Fee) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Fee) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *Fee) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Fee) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Takeaway struct {
	OrderMethod         string   `protobuf:"bytes,1,opt,name=order_method,json=orderMethod,proto3" json:"order_method,omitempty"`
	IsPaid              bool     `protobuf:"varint,3,opt,name=is_paid,json=isPaid,proto3" json:"is_paid,omitempty"`
	TpOrderId           string   `protobuf:"bytes,4,opt,name=tp_order_id,json=tpOrderId,proto3" json:"tp_order_id,omitempty"`
	OrderTime           string   `protobuf:"bytes,5,opt,name=order_time,json=orderTime,proto3" json:"order_time,omitempty"`
	DeliverTime         string   `protobuf:"bytes,6,opt,name=deliver_time,json=deliverTime,proto3" json:"deliver_time,omitempty"`
	Description         string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Consignee           string   `protobuf:"bytes,8,opt,name=consignee,proto3" json:"consignee,omitempty"`
	DeliveryPoiAddress  string   `protobuf:"bytes,9,opt,name=delivery_poi_address,json=deliveryPoiAddress,proto3" json:"delivery_poi_address,omitempty"`
	PhoneList           []string `protobuf:"bytes,10,rep,name=phone_list,json=phoneList,proto3" json:"phone_list,omitempty"`
	Tp                  string   `protobuf:"bytes,11,opt,name=tp,proto3" json:"tp,omitempty"`
	Source              string   `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	SourceOrderId       string   `protobuf:"bytes,13,opt,name=source_order_id,json=sourceOrderId,proto3" json:"source_order_id,omitempty"`
	DaySeq              string   `protobuf:"bytes,14,opt,name=day_seq,json=daySeq,proto3" json:"day_seq,omitempty"`
	DeliveryType        int32    `protobuf:"varint,15,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	DeliveryName        string   `protobuf:"bytes,16,opt,name=delivery_name,json=deliveryName,proto3" json:"delivery_name,omitempty"`
	InvoiceTitle        string   `protobuf:"bytes,17,opt,name=invoice_title,json=invoiceTitle,proto3" json:"invoice_title,omitempty"`
	WaitingTime         string   `protobuf:"bytes,18,opt,name=waiting_time,json=waitingTime,proto3" json:"waiting_time,omitempty"`
	TablewareNum        int32    `protobuf:"varint,19,opt,name=tableware_num,json=tablewareNum,proto3" json:"tableware_num,omitempty"`
	SendFee             float64  `protobuf:"fixed64,20,opt,name=send_fee,json=sendFee,proto3" json:"send_fee,omitempty"`
	PackageFee          float64  `protobuf:"fixed64,21,opt,name=package_fee,json=packageFee,proto3" json:"package_fee,omitempty"`
	DeliveryTime        string   `protobuf:"bytes,22,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
	TakeMealSn          string   `protobuf:"bytes,23,opt,name=take_meal_sn,json=takeMealSn,proto3" json:"take_meal_sn,omitempty"`
	PartnerPlatformId   int32    `protobuf:"varint,24,opt,name=partnerPlatformId,proto3" json:"partnerPlatformId,omitempty"`
	PartnerPlatformName string   `protobuf:"bytes,25,opt,name=partnerPlatformName,proto3" json:"partnerPlatformName,omitempty"`
	WxName              string   `protobuf:"bytes,26,opt,name=wxName,proto3" json:"wxName,omitempty"`
	IsHighPriority      bool     `protobuf:"varint,27,opt,name=isHighPriority,proto3" json:"isHighPriority,omitempty"`
	//外卖订单类型
	TakeoutType string `protobuf:"bytes,28,opt,name=takeoutType,proto3" json:"takeoutType,omitempty"`
	//部分退款时的外卖原单号
	OriginalOrderNo      string    `protobuf:"bytes,29,opt,name=originalOrderNo,proto3" json:"originalOrderNo,omitempty"`
	Remarks              string    `protobuf:"bytes,30,opt,name=remarks,proto3" json:"remarks,omitempty"`
	Blessing             *Blessing `protobuf:"bytes,31,opt,name=blessing,proto3" json:"blessing,omitempty"`
	NickName             string    `protobuf:"bytes,32,opt,name=nickName,proto3" json:"nickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Takeaway) Reset()         { *m = Takeaway{} }
func (m *Takeaway) String() string { return proto.CompactTextString(m) }
func (*Takeaway) ProtoMessage()    {}
func (*Takeaway) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{22}
}

func (m *Takeaway) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Takeaway.Unmarshal(m, b)
}
func (m *Takeaway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Takeaway.Marshal(b, m, deterministic)
}
func (m *Takeaway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Takeaway.Merge(m, src)
}
func (m *Takeaway) XXX_Size() int {
	return xxx_messageInfo_Takeaway.Size(m)
}
func (m *Takeaway) XXX_DiscardUnknown() {
	xxx_messageInfo_Takeaway.DiscardUnknown(m)
}

var xxx_messageInfo_Takeaway proto.InternalMessageInfo

func (m *Takeaway) GetOrderMethod() string {
	if m != nil {
		return m.OrderMethod
	}
	return ""
}

func (m *Takeaway) GetIsPaid() bool {
	if m != nil {
		return m.IsPaid
	}
	return false
}

func (m *Takeaway) GetTpOrderId() string {
	if m != nil {
		return m.TpOrderId
	}
	return ""
}

func (m *Takeaway) GetOrderTime() string {
	if m != nil {
		return m.OrderTime
	}
	return ""
}

func (m *Takeaway) GetDeliverTime() string {
	if m != nil {
		return m.DeliverTime
	}
	return ""
}

func (m *Takeaway) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Takeaway) GetConsignee() string {
	if m != nil {
		return m.Consignee
	}
	return ""
}

func (m *Takeaway) GetDeliveryPoiAddress() string {
	if m != nil {
		return m.DeliveryPoiAddress
	}
	return ""
}

func (m *Takeaway) GetPhoneList() []string {
	if m != nil {
		return m.PhoneList
	}
	return nil
}

func (m *Takeaway) GetTp() string {
	if m != nil {
		return m.Tp
	}
	return ""
}

func (m *Takeaway) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Takeaway) GetSourceOrderId() string {
	if m != nil {
		return m.SourceOrderId
	}
	return ""
}

func (m *Takeaway) GetDaySeq() string {
	if m != nil {
		return m.DaySeq
	}
	return ""
}

func (m *Takeaway) GetDeliveryType() int32 {
	if m != nil {
		return m.DeliveryType
	}
	return 0
}

func (m *Takeaway) GetDeliveryName() string {
	if m != nil {
		return m.DeliveryName
	}
	return ""
}

func (m *Takeaway) GetInvoiceTitle() string {
	if m != nil {
		return m.InvoiceTitle
	}
	return ""
}

func (m *Takeaway) GetWaitingTime() string {
	if m != nil {
		return m.WaitingTime
	}
	return ""
}

func (m *Takeaway) GetTablewareNum() int32 {
	if m != nil {
		return m.TablewareNum
	}
	return 0
}

func (m *Takeaway) GetSendFee() float64 {
	if m != nil {
		return m.SendFee
	}
	return 0
}

func (m *Takeaway) GetPackageFee() float64 {
	if m != nil {
		return m.PackageFee
	}
	return 0
}

func (m *Takeaway) GetDeliveryTime() string {
	if m != nil {
		return m.DeliveryTime
	}
	return ""
}

func (m *Takeaway) GetTakeMealSn() string {
	if m != nil {
		return m.TakeMealSn
	}
	return ""
}

func (m *Takeaway) GetPartnerPlatformId() int32 {
	if m != nil {
		return m.PartnerPlatformId
	}
	return 0
}

func (m *Takeaway) GetPartnerPlatformName() string {
	if m != nil {
		return m.PartnerPlatformName
	}
	return ""
}

func (m *Takeaway) GetWxName() string {
	if m != nil {
		return m.WxName
	}
	return ""
}

func (m *Takeaway) GetIsHighPriority() bool {
	if m != nil {
		return m.IsHighPriority
	}
	return false
}

func (m *Takeaway) GetTakeoutType() string {
	if m != nil {
		return m.TakeoutType
	}
	return ""
}

func (m *Takeaway) GetOriginalOrderNo() string {
	if m != nil {
		return m.OriginalOrderNo
	}
	return ""
}

func (m *Takeaway) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *Takeaway) GetBlessing() *Blessing {
	if m != nil {
		return m.Blessing
	}
	return nil
}

func (m *Takeaway) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

type Blessing struct {
	TemplateId           string   `protobuf:"bytes,1,opt,name=templateId,proto3" json:"templateId,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	From                 string   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Blessing) Reset()         { *m = Blessing{} }
func (m *Blessing) String() string { return proto.CompactTextString(m) }
func (*Blessing) ProtoMessage()    {}
func (*Blessing) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{23}
}

func (m *Blessing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blessing.Unmarshal(m, b)
}
func (m *Blessing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blessing.Marshal(b, m, deterministic)
}
func (m *Blessing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blessing.Merge(m, src)
}
func (m *Blessing) XXX_Size() int {
	return xxx_messageInfo_Blessing.Size(m)
}
func (m *Blessing) XXX_DiscardUnknown() {
	xxx_messageInfo_Blessing.DiscardUnknown(m)
}

var xxx_messageInfo_Blessing proto.InternalMessageInfo

func (m *Blessing) GetTemplateId() string {
	if m != nil {
		return m.TemplateId
	}
	return ""
}

func (m *Blessing) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Blessing) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Blessing) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func init() {
	proto.RegisterType((*Ticket)(nil), "oms.Ticket")
	proto.RegisterType((*Prior)(nil), "oms.Prior")
	proto.RegisterType((*Store)(nil), "oms.Store")
	proto.RegisterType((*Pos)(nil), "oms.Pos")
	proto.RegisterType((*Amount)(nil), "oms.Amount")
	proto.RegisterType((*Operator)(nil), "oms.Operator")
	proto.RegisterType((*Table)(nil), "oms.Table")
	proto.RegisterType((*Channel)(nil), "oms.Channel")
	proto.RegisterType((*RefundInfo)(nil), "oms.RefundInfo")
	proto.RegisterType((*Product)(nil), "oms.Product")
	proto.RegisterType((*SpellUser)(nil), "oms.SpellUser")
	proto.RegisterType((*Currency)(nil), "oms.Currency")
	proto.RegisterType((*SkuRemark)(nil), "oms.SkuRemark")
	proto.RegisterType((*SkuRemarkSkuName)(nil), "oms.SkuRemark.skuName")
	proto.RegisterType((*SkuRemarkSkuValue)(nil), "oms.SkuRemark.skuValue")
	proto.RegisterType((*Tax)(nil), "oms.Tax")
	proto.RegisterType((*Payment)(nil), "oms.Payment")
	proto.RegisterType((*Promotion)(nil), "oms.Promotion")
	proto.RegisterType((*PromotionInfo)(nil), "oms.PromotionInfo")
	proto.RegisterType((*PromotionSource)(nil), "oms.PromotionSource")
	proto.RegisterType((*PromotionProduct)(nil), "oms.PromotionProduct")
	proto.RegisterType((*Member)(nil), "oms.Member")
	proto.RegisterType((*Coupon)(nil), "oms.Coupon")
	proto.RegisterType((*Fee)(nil), "oms.Fee")
	proto.RegisterType((*Takeaway)(nil), "oms.Takeaway")
	proto.RegisterType((*Blessing)(nil), "oms.Blessing")
}

func init() { proto.RegisterFile("ticket.proto", fileDescriptor_98a6c21780e82d22) }

var fileDescriptor_98a6c21780e82d22 = []byte{
	// 2551 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x59, 0xcd, 0x6e, 0x23, 0xc7,
	0xf1, 0x07, 0x49, 0x91, 0x1c, 0x16, 0x45, 0x49, 0xdb, 0xde, 0x8f, 0x59, 0x79, 0xd7, 0xab, 0xff,
	0xac, 0xbd, 0x96, 0xfd, 0x77, 0x64, 0x7b, 0x0d, 0x04, 0xb9, 0x6e, 0x64, 0x18, 0x11, 0x90, 0xd5,
	0x0a, 0xb3, 0x72, 0x0e, 0x01, 0x82, 0x41, 0x6b, 0xa6, 0x45, 0x35, 0x34, 0x33, 0x3d, 0xdb, 0x3d,
	0xd4, 0x8a, 0xce, 0x2d, 0x0f, 0x90, 0x63, 0x1e, 0x21, 0x40, 0x4e, 0x79, 0x84, 0xdc, 0xf2, 0x16,
	0x41, 0xde, 0x20, 0xc7, 0x20, 0xc7, 0xa0, 0xaa, 0xbb, 0x87, 0x33, 0x14, 0x61, 0x18, 0xb9, 0xb1,
	0x7e, 0x55, 0xd3, 0x1f, 0xf5, 0x5d, 0x4d, 0xd8, 0xae, 0x65, 0x7a, 0x2d, 0xea, 0xa3, 0x4a, 0xab,
	0x5a, 0xb1, 0x81, 0x2a, 0x4c, 0xf4, 0xf7, 0x09, 0x8c, 0xce, 0x09, 0x65, 0x1f, 0xc2, 0xc4, 0xf2,
	0x13, 0x99, 0x85, 0xbd, 0x83, 0xde, 0xe1, 0x24, 0x0e, 0x2c, 0x70, 0x92, 0xb5, 0x98, 0xa5, 0x0a,
	0xfb, 0x6d, 0xe6, 0xa9, 0x62, 0x4f, 0x01, 0x4c, 0xcd, 0x75, 0x9d, 0xd4, 0xb2, 0x10, 0xe1, 0x80,
	0xb8, 0x13, 0x42, 0xce, 0x65, 0x21, 0xd8, 0x63, 0x08, 0x44, 0x99, 0x59, 0xe6, 0x16, 0x31, 0xc7,
	0xa2, 0xcc, 0x3c, 0xeb, 0x62, 0x61, 0x92, 0x8c, 0xd7, 0x22, 0x1c, 0x5a, 0xd6, 0xc5, 0xc2, 0x7c,
	0xcb, 0x6b, 0xc1, 0xf6, 0x61, 0x50, 0x29, 0x13, 0x8e, 0x0e, 0x7a, 0x87, 0xd3, 0x97, 0xc1, 0x91,
	0x2a, 0xcc, 0xd1, 0x99, 0x32, 0x31, 0x82, 0xec, 0x33, 0x08, 0x54, 0x25, 0x34, 0xaf, 0x95, 0x0e,
	0xc7, 0x24, 0x30, 0x23, 0x81, 0x37, 0x0e, 0x8c, 0x1b, 0x36, 0xfb, 0x04, 0xc6, 0xbc, 0x50, 0x8b,
	0xb2, 0x36, 0x61, 0x40, 0x92, 0x53, 0x92, 0x7c, 0x45, 0x58, 0xec, 0x79, 0xec, 0x05, 0xec, 0xd4,
	0xfc, 0x5a, 0x14, 0x82, 0xe7, 0xa7, 0x8b, 0xe2, 0x42, 0xe8, 0x70, 0x42, 0xc7, 0x59, 0x43, 0xd9,
	0x1e, 0x0c, 0xde, 0xd5, 0xcb, 0x10, 0x0e, 0x7a, 0x87, 0xc3, 0x18, 0x7f, 0xb2, 0x87, 0x30, 0x32,
	0x35, 0xaf, 0x17, 0x26, 0x9c, 0xd2, 0x17, 0x8e, 0x62, 0x5f, 0x02, 0x68, 0x71, 0xb9, 0x28, 0xb3,
	0x93, 0xf2, 0x52, 0x85, 0xdb, 0xb4, 0xf7, 0x2e, 0xed, 0x1d, 0x37, 0x70, 0xdc, 0x12, 0x61, 0x2f,
	0x60, 0x9c, 0x5e, 0xf1, 0xb2, 0x14, 0x79, 0x38, 0x23, 0xe9, 0x6d, 0x92, 0x3e, 0xb6, 0x58, 0xec,
	0x99, 0xec, 0x10, 0x82, 0x4a, 0xab, 0x6c, 0x91, 0xd6, 0x26, 0xdc, 0x39, 0x18, 0x34, 0x82, 0x67,
	0x16, 0x8c, 0x1b, 0x2e, 0x49, 0xf2, 0x65, 0x21, 0xf0, 0xf2, 0xbb, 0x6d, 0x49, 0x0b, 0xc6, 0x0d,
	0x97, 0x1d, 0x01, 0x54, 0x5a, 0x15, 0xaa, 0x96, 0xaa, 0x34, 0xe1, 0x1e, 0xc9, 0xee, 0xf8, 0x55,
	0x2d, 0x1c, 0xb7, 0x24, 0x50, 0xab, 0x85, 0x40, 0x85, 0x98, 0xf0, 0x1e, 0x09, 0x5b, 0xad, 0xbe,
	0x26, 0x2c, 0xf6, 0x3c, 0x76, 0x00, 0xc3, 0x9a, 0x5f, 0xe4, 0x22, 0x64, 0x74, 0x21, 0x20, 0xa1,
	0x73, 0x44, 0x62, 0xcb, 0x40, 0xed, 0x55, 0x42, 0x55, 0xb9, 0x08, 0x3f, 0x20, 0x95, 0x3a, 0x8a,
	0x3d, 0x82, 0xb1, 0x56, 0xaa, 0x40, 0x6f, 0xbb, 0x6f, 0xd5, 0x8a, 0xe4, 0xa9, 0xc2, 0x0f, 0xb4,
	0x28, 0xb8, 0xbe, 0x0e, 0x1f, 0x38, 0x9c, 0x28, 0xf4, 0xa4, 0x2b, 0xb5, 0x30, 0x22, 0xe1, 0x69,
	0xf8, 0xf0, 0xa0, 0x77, 0x18, 0xc4, 0x63, 0xa2, 0x5f, 0xa5, 0xec, 0x05, 0xec, 0x2a, 0x9d, 0x09,
	0x4d, 0x1e, 0x98, 0xd4, 0xcb, 0x4a, 0x84, 0x8f, 0xe8, 0xdb, 0x19, 0xc1, 0xe8, 0x88, 0xe7, 0xcb,
	0x4a, 0xb0, 0x03, 0x98, 0x9a, 0x2b, 0x79, 0x59, 0x3b, 0x07, 0x08, 0x49, 0xa6, 0x0d, 0xb1, 0x08,
	0xc6, 0x35, 0xbf, 0xfd, 0xb5, 0x34, 0x75, 0xf8, 0x98, 0xae, 0x1d, 0xb8, 0x1b, 0xdd, 0xc6, 0x9e,
	0x81, 0x77, 0x36, 0xb5, 0xd2, 0x22, 0xdc, 0x6f, 0xdd, 0xf9, 0x2d, 0x22, 0xb1, 0x65, 0xb0, 0x97,
	0x30, 0x43, 0xaf, 0xe2, 0xef, 0xf9, 0x32, 0x91, 0xe8, 0x1c, 0x51, 0xcb, 0x85, 0xcf, 0x1d, 0x27,
	0xde, 0xf6, 0x32, 0xe4, 0x1c, 0x4f, 0x7c, 0xfc, 0x7d, 0x5f, 0xaa, 0xf0, 0xb9, 0x8d, 0xb0, 0x06,
	0x40, 0x73, 0xa4, 0x6a, 0x51, 0xa1, 0xed, 0x3e, 0x6e, 0x99, 0xe3, 0x98, 0xb0, 0xd8, 0xf3, 0xd8,
	0x13, 0xd8, 0xba, 0x14, 0xc2, 0x84, 0x9f, 0xb4, 0xce, 0xfe, 0x9d, 0x10, 0x31, 0xa1, 0x6c, 0x1f,
	0x02, 0x54, 0xd0, 0x6f, 0x55, 0x29, 0xc2, 0x17, 0x3e, 0xc2, 0x2d, 0x8d, 0x97, 0xaa, 0xb4, 0x54,
	0x3a, 0xfc, 0xb4, 0x75, 0xa9, 0x33, 0x44, 0x62, 0xcb, 0xc0, 0x90, 0x4c, 0x17, 0x5a, 0x8b, 0x32,
	0x5d, 0x86, 0x87, 0xad, 0xfb, 0x1c, 0x3b, 0x30, 0x6e, 0xd8, 0xec, 0x1b, 0x78, 0x90, 0x49, 0x93,
	0x62, 0xe0, 0x25, 0x95, 0x56, 0x95, 0xd2, 0xe8, 0x54, 0x22, 0x0b, 0x3f, 0x23, 0xbb, 0xdd, 0xf7,
	0xcc, 0xb3, 0x16, 0x8f, 0x7d, 0x04, 0x60, 0x2a, 0x91, 0xe7, 0x6f, 0xd0, 0x64, 0xe1, 0xe7, 0x24,
	0xd9, 0x42, 0xa2, 0xd7, 0x30, 0xa4, 0xf3, 0x30, 0x06, 0x5b, 0xa9, 0xca, 0x84, 0xcb, 0x60, 0xf4,
	0xdb, 0x3a, 0x0d, 0x37, 0xaa, 0x74, 0xa9, 0xcb, 0x51, 0x2c, 0x84, 0xb1, 0x34, 0xf4, 0x19, 0x65,
	0xad, 0x20, 0xf6, 0x64, 0x24, 0x61, 0x48, 0x36, 0x63, 0x3b, 0xd0, 0x6f, 0xd2, 0x61, 0x5f, 0x66,
	0xcd, 0xf2, 0xfd, 0xd6, 0xf2, 0x78, 0x36, 0x91, 0xaa, 0x32, 0x3b, 0x46, 0x8e, 0xcd, 0x7f, 0x2d,
	0x04, 0x8d, 0x97, 0xaa, 0xa2, 0xe2, 0xe5, 0xf2, 0x24, 0x73, 0x19, 0x70, 0x05, 0x44, 0x7f, 0xe8,
	0xc1, 0xe0, 0x4c, 0x99, 0x9f, 0xb4, 0xd3, 0x63, 0x08, 0x2a, 0x65, 0x92, 0x92, 0x37, 0x79, 0x76,
	0x5c, 0x29, 0x73, 0xca, 0x0b, 0x81, 0x19, 0x3a, 0x13, 0x37, 0x32, 0x15, 0x98, 0xbe, 0xed, 0x26,
	0x81, 0x05, 0x4e, 0x32, 0xf6, 0x0c, 0xa6, 0x8e, 0x49, 0x4b, 0xda, 0x54, 0x0b, 0x16, 0xc2, 0x23,
	0x46, 0xff, 0xe9, 0xc3, 0xc8, 0xe6, 0x44, 0x72, 0x35, 0x7e, 0x6b, 0x09, 0x3a, 0x4e, 0x2f, 0x5e,
	0x01, 0xec, 0xff, 0x60, 0x7b, 0xae, 0x95, 0x31, 0x89, 0xcd, 0x9c, 0x74, 0xba, 0x5e, 0x3c, 0x25,
	0xcc, 0x89, 0x3c, 0x05, 0x28, 0x45, 0xed, 0x05, 0x06, 0x76, 0x85, 0x52, 0xd4, 0x2b, 0x76, 0xc5,
	0x97, 0x9e, 0xbd, 0x65, 0xd9, 0x15, 0x5f, 0x3a, 0xf6, 0xa7, 0xb0, 0xdb, 0x78, 0x87, 0x93, 0x19,
	0x92, 0xcc, 0x8e, 0x87, 0x9d, 0xe0, 0xff, 0xc3, 0x3d, 0x2d, 0x0a, 0x75, 0x23, 0x7e, 0x10, 0x5a,
	0x79, 0xd1, 0x11, 0x89, 0xee, 0xad, 0x18, 0x4e, 0x78, 0x1f, 0x02, 0xad, 0x16, 0x65, 0x26, 0xcb,
	0x39, 0x55, 0x8c, 0x5e, 0xdc, 0xd0, 0xb8, 0xa3, 0xba, 0x11, 0xfa, 0x32, 0x57, 0xef, 0xfd, 0x32,
	0x81, 0xdd, 0xd1, 0xc3, 0x6e, 0x91, 0x08, 0xb6, 0x31, 0x09, 0xcf, 0x85, 0x53, 0xce, 0x84, 0xa4,
	0x3a, 0x98, 0xf5, 0x05, 0x8d, 0x7a, 0xfd, 0x4e, 0x08, 0xaa, 0x13, 0xbd, 0xb8, 0x85, 0x60, 0x01,
	0xa9, 0x65, 0x45, 0xb5, 0xa2, 0x17, 0xe3, 0xcf, 0xe8, 0xf7, 0x10, 0xf8, 0xba, 0xb5, 0xc9, 0x07,
	0xc8, 0xd6, 0xce, 0x07, 0xf0, 0x77, 0xe3, 0x17, 0x83, 0x96, 0x5f, 0x3c, 0x05, 0xc8, 0xd5, 0x5c,
	0x96, 0xed, 0x22, 0x3b, 0x21, 0x84, 0xca, 0x6c, 0x08, 0x63, 0x22, 0x4e, 0x32, 0x5f, 0x65, 0x1d,
	0x19, 0xfd, 0xb1, 0x07, 0x43, 0x4a, 0xc8, 0x77, 0xb6, 0x7e, 0x04, 0xe3, 0x1f, 0x54, 0x49, 0xde,
	0xe4, 0x82, 0x06, 0xc9, 0x93, 0x0c, 0x05, 0x4b, 0xe5, 0x76, 0xef, 0x97, 0x94, 0x91, 0x91, 0x73,
	0xaa, 0xdc, 0xbe, 0x8e, 0x6a, 0xa5, 0xf6, 0x61, 0x27, 0xb5, 0xa3, 0x7f, 0x89, 0xa2, 0x52, 0x9a,
	0xeb, 0x25, 0xd9, 0x2b, 0x88, 0x57, 0x40, 0xf4, 0xd7, 0x1e, 0x8c, 0x5d, 0xc9, 0xa3, 0xd2, 0xaa,
	0x16, 0x3a, 0xf5, 0xc1, 0xec, 0x28, 0xd4, 0xb1, 0x75, 0x5d, 0x4c, 0xdb, 0xee, 0x74, 0x2d, 0x04,
	0x77, 0xb0, 0x99, 0x1d, 0xd9, 0xae, 0x1d, 0x69, 0x00, 0xb4, 0x62, 0x26, 0x72, 0x79, 0x23, 0xf4,
	0x92, 0x04, 0xec, 0xa9, 0x3b, 0x18, 0xee, 0x5c, 0x57, 0x18, 0x56, 0x4e, 0x5f, 0x8e, 0x6a, 0x74,
	0x3f, 0x5a, 0xe9, 0x3e, 0xfa, 0x53, 0x0f, 0x60, 0x55, 0xd2, 0x31, 0x0e, 0x6d, 0x51, 0x6f, 0xb5,
	0x51, 0xae, 0xca, 0x67, 0x2c, 0x82, 0x99, 0x16, 0x97, 0xc9, 0xaa, 0xcf, 0xb2, 0x87, 0x9f, 0x6a,
	0x71, 0x79, 0xee, 0x5b, 0xad, 0xae, 0x4c, 0xa3, 0xea, 0x95, 0xcc, 0xa9, 0x62, 0xcf, 0x49, 0x06,
	0x37, 0x71, 0x79, 0xcd, 0x5d, 0xc2, 0x82, 0x31, 0x61, 0xd1, 0xdf, 0xb6, 0x60, 0xec, 0x9a, 0x82,
	0xff, 0xd9, 0xb1, 0x1e, 0xc0, 0xc8, 0x88, 0x77, 0x3e, 0xa5, 0x0c, 0xe2, 0xa1, 0x11, 0xef, 0x4e,
	0x32, 0x76, 0x9f, 0xea, 0x41, 0x2a, 0x5c, 0x68, 0x5a, 0x02, 0xb5, 0xd6, 0x09, 0x43, 0x47, 0xf9,
	0xa6, 0x69, 0xbc, 0x6a, 0x9a, 0x36, 0x04, 0x79, 0xb0, 0x31, 0xc8, 0x19, 0x6c, 0x51, 0xc1, 0xb6,
	0xdd, 0x18, 0xfd, 0x66, 0x47, 0x30, 0xe5, 0x69, 0x2a, 0x8c, 0x51, 0x5a, 0x0a, 0x13, 0xc2, 0x86,
	0x1e, 0xa8, 0x2d, 0xc0, 0x7e, 0x06, 0xd3, 0x54, 0x15, 0x17, 0x2a, 0x91, 0xb5, 0x28, 0xb0, 0x4d,
	0xbb, 0x2b, 0x0f, 0x24, 0x70, 0x82, 0x7c, 0xcc, 0x2b, 0xb6, 0x7b, 0x94, 0xaa, 0x4c, 0xb4, 0x48,
	0x95, 0xce, 0x0c, 0xf5, 0x6f, 0x93, 0x78, 0xaf, 0x61, 0xc4, 0x16, 0x67, 0x5f, 0xc0, 0xc4, 0x5c,
	0x2f, 0x62, 0xdb, 0x91, 0xcc, 0x5a, 0x7d, 0xd3, 0x5b, 0x8f, 0xc6, 0x2b, 0x81, 0x56, 0xf3, 0xb2,
	0xd3, 0x69, 0x5e, 0x3a, 0x29, 0x77, 0x77, 0x3d, 0xe5, 0x76, 0xf3, 0xe9, 0xde, 0x7a, 0x3e, 0x3d,
	0x72, 0x95, 0xf1, 0x7b, 0xb3, 0x6a, 0xc7, 0xdc, 0x19, 0x3c, 0x1c, 0xb7, 0x24, 0xb0, 0x52, 0x5f,
	0xe4, 0xc2, 0x18, 0x4c, 0x85, 0xac, 0x55, 0xa9, 0x7f, 0xe9, 0xc0, 0xb8, 0x61, 0x47, 0x5f, 0xc3,
	0xa4, 0x59, 0xa3, 0x71, 0x99, 0x5e, 0xcb, 0x65, 0x9c, 0x65, 0xfb, 0x8d, 0x65, 0xa3, 0x9f, 0x43,
	0xe0, 0x4b, 0xfe, 0xc6, 0x2f, 0x30, 0xa6, 0x97, 0xc5, 0x85, 0xca, 0x7d, 0x56, 0xb1, 0x54, 0xf4,
	0xcf, 0x1e, 0x4c, 0x1a, 0x9d, 0xb1, 0xcf, 0x5b, 0x5f, 0x4e, 0x5f, 0x3e, 0xec, 0x6a, 0xf4, 0xc8,
	0x5c, 0x2f, 0x30, 0x1a, 0xdd, 0x8a, 0x5f, 0xc2, 0xe8, 0x86, 0xe7, 0x0b, 0x61, 0x68, 0xc5, 0xe9,
	0xcb, 0x47, 0x77, 0xa5, 0x7f, 0x83, 0xfc, 0xd8, 0x89, 0xed, 0xbf, 0x82, 0xb1, 0x5b, 0xe1, 0x27,
	0xd5, 0x5c, 0x7f, 0x8b, 0xc1, 0xea, 0x16, 0xfb, 0x2f, 0x21, 0xf0, 0xcb, 0x6e, 0x6c, 0x38, 0x36,
	0x84, 0x57, 0xb4, 0x80, 0xc1, 0x39, 0xbf, 0x6d, 0x05, 0x49, 0xaf, 0x13, 0x24, 0xfb, 0x10, 0x98,
	0xc5, 0xc5, 0xb9, 0xaa, 0x79, 0xee, 0x8a, 0x6a, 0x43, 0x6f, 0x8c, 0x4c, 0xbf, 0xc5, 0x56, 0x37,
	0x82, 0xb5, 0x1f, 0xa5, 0x7a, 0x31, 0xfd, 0x8e, 0xfe, 0xd1, 0x87, 0xb1, 0x6b, 0xf8, 0xef, 0x5c,
	0x77, 0x15, 0xdd, 0xf6, 0xa0, 0x2e, 0xba, 0xbb, 0x15, 0x7a, 0xb0, 0x5e, 0xa1, 0x3f, 0xc6, 0xe4,
	0xc3, 0xf3, 0x33, 0x0f, 0xb8, 0x1a, 0xde, 0x05, 0xf1, 0x9e, 0xb6, 0x30, 0xba, 0xd3, 0x38, 0x0a,
	0xef, 0xe9, 0xcb, 0xaa, 0x4b, 0x13, 0x0d, 0xfd, 0xa3, 0x55, 0xfa, 0x31, 0x0d, 0x33, 0xb6, 0xc0,
	0x05, 0xae, 0xf5, 0xe1, 0x4b, 0x2a, 0x6f, 0x4f, 0x01, 0x6a, 0xcd, 0x4b, 0x63, 0x9b, 0x9b, 0x89,
	0xeb, 0x8e, 0x11, 0x39, 0x6e, 0x6b, 0x0a, 0x5a, 0x9a, 0xfa, 0x08, 0xa7, 0xb3, 0x54, 0xc8, 0x1b,
	0x1a, 0x4f, 0x6c, 0x35, 0x6e, 0x21, 0xec, 0x10, 0x76, 0xeb, 0xea, 0x1c, 0x97, 0xe0, 0x29, 0xc6,
	0xfb, 0xa9, 0x72, 0x29, 0x60, 0x1d, 0x8e, 0xfe, 0xdc, 0x83, 0x49, 0x33, 0x24, 0xb1, 0x5f, 0xc0,
	0xac, 0x19, 0x93, 0x68, 0xf0, 0xb3, 0x1e, 0xcc, 0xba, 0xb3, 0x14, 0xcd, 0x7e, 0x5d, 0x41, 0xf6,
	0x45, 0x53, 0xec, 0xac, 0x1b, 0xdf, 0xef, 0x7e, 0xf2, 0x96, 0x78, 0x4d, 0x09, 0xfc, 0xba, 0x35,
	0x04, 0x0e, 0x28, 0xe4, 0x1f, 0x74, 0xe5, 0xef, 0x4c, 0x83, 0xd1, 0xbf, 0xfa, 0x30, 0xeb, 0x9c,
	0xa0, 0x49, 0xae, 0xbd, 0x56, 0x72, 0x7d, 0x0e, 0xb3, 0x26, 0x33, 0xd7, 0xab, 0xf2, 0xba, 0xed,
	0x41, 0x2a, 0x8f, 0x1b, 0x42, 0x02, 0x1b, 0xc3, 0xe6, 0x42, 0xab, 0x16, 0x74, 0xba, 0xba, 0x64,
	0xc6, 0x3e, 0x81, 0x9d, 0x95, 0x48, 0xab, 0x11, 0x5d, 0x69, 0x82, 0xec, 0xd5, 0x11, 0xa3, 0x33,
	0x8c, 0xd6, 0xc4, 0xce, 0xdd, 0x49, 0x79, 0x8e, 0x3d, 0x1b, 0xba, 0x4f, 0xce, 0x2b, 0xf2, 0x98,
	0x20, 0xde, 0x26, 0xf0, 0x8d, 0xc5, 0xd8, 0x57, 0x70, 0xbf, 0xd6, 0x72, 0x3e, 0x77, 0xd3, 0x9f,
	0x49, 0xd2, 0x85, 0xa9, 0x55, 0x41, 0x1e, 0x14, 0xc4, 0xcc, 0xf1, 0xd0, 0x8b, 0xcc, 0x31, 0x71,
	0x70, 0x77, 0x57, 0x7a, 0x33, 0x69, 0xaa, 0x9c, 0x2f, 0x9d, 0x43, 0xcd, 0x2c, 0xfa, 0xad, 0x05,
	0xf1, 0xba, 0x05, 0xbf, 0x4d, 0xbc, 0x5a, 0x5c, 0xa7, 0x37, 0x2d, 0xf8, 0xed, 0xb7, 0x0e, 0x8a,
	0x7e, 0x07, 0xbb, 0x6b, 0xe6, 0xc3, 0x46, 0xcc, 0x6d, 0x49, 0x4a, 0x1f, 0xc6, 0x9e, 0x44, 0xd7,
	0x6f, 0xd6, 0x72, 0xe1, 0xef, 0x69, 0xac, 0xb6, 0x97, 0x52, 0x8b, 0x8c, 0x2c, 0x3d, 0x89, 0x2d,
	0x11, 0xfd, 0xbb, 0x07, 0x7b, 0xeb, 0xe6, 0x5e, 0x15, 0xe6, 0x5e, 0xbb, 0x30, 0xef, 0xc1, 0x80,
	0x17, 0x7e, 0x5d, 0xfc, 0x49, 0x59, 0x28, 0x4d, 0x5f, 0x15, 0x3e, 0xbc, 0x1d, 0xe5, 0x13, 0xfa,
	0xd6, 0xaa, 0x54, 0x3f, 0x80, 0xd1, 0xb5, 0x58, 0xa2, 0x45, 0xad, 0xb1, 0x86, 0xd7, 0x62, 0x79,
	0x92, 0xb9, 0x05, 0xb0, 0xfe, 0x8e, 0xe8, 0x50, 0x8e, 0x6a, 0x7c, 0x6a, 0xdc, 0xf2, 0xa9, 0xf6,
	0xdd, 0x82, 0xb5, 0xbb, 0x3d, 0x86, 0xe0, 0x52, 0x0b, 0x91, 0xe0, 0xf9, 0x6c, 0x3f, 0x3d, 0x46,
	0xfa, 0x95, 0x3d, 0x63, 0x21, 0xea, 0x2b, 0x95, 0xb9, 0xc8, 0x75, 0x54, 0x64, 0x60, 0x64, 0x1f,
	0x1a, 0x70, 0xac, 0xb1, 0x4f, 0x0d, 0x49, 0x2b, 0x03, 0x83, 0x85, 0x8e, 0xdd, 0xe0, 0x57, 0xa8,
	0x0b, 0x99, 0x7b, 0x37, 0x76, 0xd4, 0x46, 0x07, 0x7e, 0x02, 0x93, 0xb9, 0x16, 0xa2, 0x96, 0xe5,
	0xdc, 0xf8, 0x16, 0xba, 0x01, 0xb0, 0x2f, 0x1d, 0xd9, 0x79, 0x1a, 0x3b, 0x3c, 0x69, 0x12, 0x55,
	0xe6, 0xb2, 0xb4, 0x7b, 0x06, 0x71, 0x20, 0xcd, 0x1b, 0xa2, 0x5d, 0x8a, 0xed, 0xdf, 0x69, 0xb4,
	0x06, 0x1b, 0x1a, 0xad, 0xad, 0x6e, 0x3a, 0x27, 0xbd, 0x0d, 0xa9, 0xcd, 0xb2, 0x7a, 0xfb, 0x10,
	0x26, 0x15, 0xd7, 0x09, 0x95, 0x2d, 0x9f, 0x2b, 0x2b, 0xae, 0x6d, 0xd9, 0x79, 0x06, 0x53, 0x23,
	0xde, 0x2d, 0x44, 0x69, 0x27, 0xbe, 0xb1, 0x9f, 0x3a, 0x2d, 0x74, 0x92, 0x45, 0x05, 0x0c, 0x70,
	0xe0, 0xd8, 0x54, 0x84, 0x1b, 0x2f, 0xe9, 0xaf, 0x79, 0x09, 0xda, 0x7e, 0xd0, 0x79, 0xdb, 0xea,
	0x8c, 0x69, 0xbe, 0x56, 0xb5, 0x0f, 0xeb, 0x8c, 0x1c, 0xfd, 0x25, 0x80, 0xc0, 0x3f, 0x5e, 0x60,
	0x74, 0xd8, 0x27, 0x17, 0x67, 0x40, 0xbb, 0xf9, 0x94, 0xb0, 0xd7, 0x04, 0xe1, 0x7c, 0x21, 0x4d,
	0x52, 0x71, 0x99, 0xb9, 0xd9, 0x7b, 0x24, 0xcd, 0x19, 0x97, 0x38, 0xe9, 0x4f, 0xeb, 0x2a, 0xb1,
	0x9f, 0x37, 0x79, 0x64, 0x52, 0x57, 0x34, 0xe7, 0xdb, 0xea, 0xb4, 0x7a, 0xce, 0x71, 0x47, 0x98,
	0x34, 0x2f, 0x39, 0xb8, 0xb5, 0x6b, 0xe5, 0xad, 0x80, 0xcd, 0x1d, 0x53, 0x87, 0x91, 0xc8, 0x01,
	0x4e, 0xc3, 0x26, 0xd5, 0xb2, 0xc2, 0xd0, 0x71, 0xaa, 0x6b, 0x43, 0x76, 0x62, 0x2f, 0x8d, 0x9c,
	0x97, 0xc2, 0x57, 0x9b, 0x15, 0x80, 0x49, 0xc5, 0x4f, 0x0b, 0x49, 0xa5, 0x64, 0xc2, 0xb3, 0x4c,
	0x0b, 0x63, 0x5c, 0xa2, 0x60, 0x9e, 0x77, 0xa6, 0xe4, 0x2b, 0xcb, 0xa1, 0x8a, 0x7a, 0x85, 0xd3,
	0x54, 0x2e, 0x4d, 0x4d, 0x1d, 0xeb, 0x24, 0x9e, 0x10, 0x42, 0x6f, 0x46, 0x3b, 0xd0, 0xaf, 0x2b,
	0xf7, 0x7e, 0xd8, 0xaf, 0xab, 0xd6, 0xe0, 0xb3, 0xdd, 0x19, 0x7c, 0x5e, 0xc0, 0xae, 0xfd, 0xb5,
	0x52, 0xcf, 0xcc, 0x26, 0x27, 0x0b, 0x7b, 0x15, 0x3d, 0x82, 0x71, 0xc6, 0x97, 0x89, 0x11, 0xef,
	0x7c, 0xa3, 0x99, 0xf1, 0xe5, 0x5b, 0xf1, 0x8e, 0xb2, 0xbb, 0x3f, 0x39, 0x59, 0x70, 0x97, 0x8c,
	0xdd, 0x1d, 0x7e, 0xda, 0x42, 0xe4, 0x3a, 0x7b, 0xdd, 0x09, 0x89, 0x3a, 0xa7, 0xe7, 0x30, 0x93,
	0xe5, 0x8d, 0x92, 0xa9, 0x48, 0x6a, 0x59, 0xe7, 0x22, 0xbc, 0x67, 0x85, 0x1c, 0x78, 0x8e, 0x18,
	0xda, 0xe2, 0x3d, 0x97, 0x18, 0x40, 0xd6, 0x16, 0xcc, 0x6a, 0xda, 0x61, 0x64, 0x8b, 0xe7, 0x30,
	0xa3, 0x97, 0xc0, 0xf7, 0x5c, 0x8b, 0xa4, 0x5c, 0x14, 0xee, 0x1d, 0x70, 0xbb, 0x01, 0x4f, 0x17,
	0x05, 0x26, 0x09, 0x23, 0xca, 0x2c, 0xb9, 0x14, 0x82, 0x9e, 0x03, 0x7b, 0xf1, 0x18, 0x69, 0x74,
	0xef, 0x67, 0x30, 0xad, 0x78, 0x7a, 0xcd, 0xe7, 0x82, 0xb8, 0x0f, 0x6c, 0x25, 0x77, 0x10, 0x0a,
	0x74, 0xae, 0x8c, 0x87, 0x78, 0xb8, 0x36, 0xef, 0x59, 0x8f, 0xa0, 0xe7, 0xb6, 0xa4, 0x10, 0x3c,
	0x4f, 0x4c, 0xe9, 0xde, 0x07, 0x01, 0xb1, 0xd7, 0x82, 0xe7, 0x6f, 0x4b, 0xf6, 0x05, 0xdc, 0xab,
	0xb8, 0xae, 0x4b, 0xa1, 0xcf, 0x72, 0x5e, 0x5f, 0x2a, 0x5d, 0x9c, 0x64, 0xf4, 0x44, 0x38, 0x8c,
	0xef, 0x32, 0xd8, 0x57, 0xf0, 0xc1, 0x1a, 0x48, 0xc3, 0xe4, 0x63, 0x5a, 0x76, 0x13, 0x0b, 0x4d,
	0xfe, 0xfe, 0x96, 0x84, 0xf6, 0xad, 0xc5, 0x2c, 0xc5, 0x5e, 0xc0, 0x8e, 0x34, 0xbf, 0x92, 0xf3,
	0x2b, 0x7a, 0x97, 0x92, 0xf5, 0x32, 0xfc, 0x90, 0xa2, 0x65, 0x0d, 0x45, 0x9f, 0xc6, 0xd3, 0xaa,
	0x05, 0x55, 0xe8, 0xf0, 0x89, 0xd5, 0x74, 0x0b, 0xc2, 0x96, 0x46, 0x69, 0x39, 0x97, 0x25, 0xb7,
	0x4f, 0x66, 0xa7, 0x2a, 0x7c, 0x6a, 0x5b, 0x9a, 0x35, 0x18, 0xab, 0x94, 0x1d, 0x4c, 0x4c, 0xf8,
	0x91, 0xed, 0xb4, 0x1c, 0xd9, 0x99, 0x1d, 0x9e, 0xfd, 0xe8, 0xec, 0x80, 0x49, 0xbf, 0x94, 0xe9,
	0x35, 0x5d, 0xe9, 0xc0, 0x8e, 0xc1, 0x9e, 0x8e, 0xae, 0x20, 0xf0, 0x5f, 0x60, 0x27, 0x86, 0xd3,
	0x7f, 0xce, 0x6b, 0x71, 0xe2, 0x13, 0x45, 0x0b, 0xa1, 0xd8, 0xf0, 0x7f, 0x39, 0xf4, 0x6b, 0x3a,
	0x5c, 0xaa, 0xca, 0x5a, 0xb8, 0xce, 0x74, 0x12, 0x7b, 0x12, 0xb3, 0xd2, 0xa5, 0x56, 0x85, 0x4f,
	0xab, 0xf8, 0xfb, 0x62, 0x44, 0xff, 0x75, 0x7c, 0xf3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf,
	0xfb, 0xdd, 0x6d, 0xfb, 0x18, 0x00, 0x00,
}
